server:
  port: 9000
spring:
  application:
    name: cards
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest
  config:
    import: "optional:configserver:http://localhost:8071"
  profiles:
    active:
      - prod
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      probes:
        enabled: true
      enabled: true
    shutdown:
      enabled: true
  info:
    env:
      enabled: true
  traces:
    tags:
      application: ${spring.application.name}
  logs:
    tags:
      application: ${spring.application.name}
  metrics:
    tags:
      application: ${spring.application.name}
endpoints:
  shutdown:
    enabled: true

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8070/eureka/
  instance:
    prefer-ip-address: true # This tells the microservice to register itself with the IP address instead of the hostname

info:
  app:
    name: cards
    description: Cards Microservice
    version: 1.0.0

logging:
  level:
    com:
      eazybytes:
        cards: DEBUG
  pattern:
    level: "%5p %d{yyyy-MM-dd HH:mm:ss} - %msg%n [${spring.application.name},%X{trace_id},%X{span_id}]"